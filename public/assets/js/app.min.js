!function ($) {
  var App = function () {
  }

  //init app
  App.prototype.init = function () {
    //end test code
    var pageUrl = window.location.href.split(/[?#]/)[0];
    this.hideLoader()
    var self = this;

    if ($('.accordion .collapse').length) {
      $('.accordion .collapse').on('show.bs.collapse', function () {
        $(this).parents(".card").addClass("active")
      })
      $('.accordion .collapse').on('hide.bs.collapse', function () {
        $(this).parents(".card").removeClass("active")
      })
    }
    
    if($(".back-top").length) {
      $(".back-top").on("click", function() {
        $("html, body").animate({
          scrollTop: 0
        }, 500)
      })
    }

    $(".navbar-header .navbar-toggler").on("click", function(){
      var target = $(this).attr("data-target");
      $(target).slideToggle().removeClass("collapse");
    });

    //Change profile image click
    $("#choose-file").on("click", function () {
      $("#upload-image").trigger('click');
    });

    if($('#resetModal').length){
      $('#resetModal').on('hide.bs.modal', function () {
        window.history.pushState({}, "", window.location.origin + window.location.pathname);
      });
    }

    // loader
    $(".header .navbar-nav .nav-link").each(function () {
      if (this.href == pageUrl) {
        $(this).addClass("active");
      }
    });

    $(".password-group .icon-view").on("click", function () {
      $(this).parent().toggleClass('active');
      var input = $(this).siblings('input');
      if(input.attr('type').toLowerCase() === 'text') {
        input.attr('type', 'password');
      }
      else {
        input.attr('type', 'text');
      }
    });

    $('.modal').modal({backdrop: 'static', keyboard: false, show: false})  

    $("#forgot-btn").on("click", function () {
      $(".auth-modal").modal('hide');
      $("#forgotModal").modal('show');
    })

    $("#register-btn").on("click", function () {
      $(".auth-modal").modal('hide');
      $("#registerModal").modal('show');
    })

    $("#login-btn, #forgot-login-btn, #auth-btn").on("click", function () {
      $(".auth-modal").modal('hide');
      $("#loginModal").modal('show');
    })

    //mobile menu
    $(".header .navbar-nav .dropdown-item").each(function () {
      if (this.href == pageUrl) {
        $(this).addClass("active");
        $(this).parents('.dropdown-menu').siblings(".nav-link").addClass('active');
      }
    });

    //upload profile image
    $("#upload-image").on("change", function () {
      $("#choose-file").addClass("disable-events")
      var file = this.files[0];
      self.loadImg(file, this)
    })

    $("#search-form").on("submit", function() {
      var keyword = $(this).find(".form-control").val();
      var param = new URLSearchParams();
      param.append("s", keyword);
      window.location.href="search-result?"+param;
    })

    //init service worker
    this.initServiceWorker();

    //hide error
    this.messages();

    //window scroll method
    this.windowScroll();
  }

  //init service worker
  App.prototype.initServiceWorker = function () {
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('/sw.min.js')
        .then(function (reg) {
          console.log('service worker registered')
        })
        .catch(function (err) {
          console.log('service worker not registered', err)
        });
    }
  }

  //close error msgs
  App.prototype.messages = function () {
    if ($(".error-msgs").length) {
      $(document).on('click', ".error-msgs .close", function () {
        $(this).parents(".error-msgs").find("p").remove();
        $(this).parent().hide();
      })
    }
    if ($(".success-msgs").length) {
      $(document).on('click', ".success-msgs .close", function () {
        $(this).parents(".success-msgs").find("p").remove();
        $(this).parent().hide();
      })
    }
  }

  //logout user
  App.prototype.logout = function () {
    var self = this;
    $("#logout-btn").on("click", function () {
      self.showContentLoader($("#logged-user").find('.loader-wrap'));
      self.logoutUser();
    })
  }

  //show profile image method
  App.prototype.loadImg = function (file, self) {
    var img, instance = this;
    var defaultImg= "assets/images/client-thumb.png";
    if (file) {
      var type = file.name.match(/.(jpg|jpeg|png|gif)$/i);
      if (!type) {
        instance.showError(self, "Please choose valid file", "alert-success", "alert-danger");
        $("#choose-file").removeClass("disable-events")
        return;
      }
      $(self).parents("form").find(".error-msgs").hide();
      img = new Image();
      img.onload = function () {
        if (this.width > 160) {
          var msg = "The file is too large. Allowed maximum size of 160 X 160";
          $(".profile-image img").hide();
          $(".profile-image img").attr("src", defaultImg).show()
          instance.showError(self, msg, "alert-success", "alert-danger");
          $("#choose-file").removeClass("disable-events")
          $("#choose-file").find("span").show();
          $("#choose-file").find(".btn-loader").hide();
          return;
        }
        else {
          instance.uploadImage();
        }
      };
      img.onerror = function () {
        error = {
          flag: true,
          msg: "Image load error"
        }
      };
      img.src = window.URL.createObjectURL(file);
      img.style.display = "none";
      $(".profile-image img").attr("src", window.URL.createObjectURL(file))
    }
  }

  //change profile image
  App.prototype.uploadImage = function () {
    $("#choose-file").removeClass("disable-events")
    $("#submit-btn").trigger('click');
  }

  //show error
  App.prototype.showError = function (currentElem, msg, removeClasses, addClasses) {
    $(currentElem).parents("form").find(".error-msgs").find("p").remove();
    $(currentElem).parents("form").find(".error-msgs").removeClass(removeClasses).addClass(addClasses).append("<p>" + msg + "</p>").fadeIn(200);
  }

  //show fakeloader
  App.prototype.showLoader = function () {
    $(".fakeLoader").show();
  }

  //hide fakeloader
  App.prototype.hideLoader = function () {
    $(".fakeLoader").hide();
  }

  //show fakeloader
  App.prototype.showContentLoader = function (elem) {
    $(elem).addClass('show');
  }

  //hide fakeloader
  App.prototype.hideContentLoader = function (elem) {
    $(elem).removeClass('show');
  }

  /**
   * ----------------------------------------------
   * Nav Scroll active section class 
   * ----------------------------------------------
   */
  App.prototype.windowScroll = function () {
    //get document height
    var docHeight = $(document).outerHeight();
    $(window).on('scroll', function () {
      var scrollPos = $(this).scrollTop();
      if (scrollPos >= 20) {
        $(".header").addClass("fixed-nav");
      } else {
        $(".header").removeClass("fixed-nav");
      }
      if (scrollPos > docHeight / 2) {
        $(".back-top").addClass("show");
      }
      else {
        $(".back-top").removeClass("show");
      }
    })
  }

  //init App
  $.App = new App, $.App.Constructor = App
}(window.jQuery),
//initializing App
function ($) {
  "use strict";
  $.App.init();
}(window.jQuery);

!function ($) {
  var Auth = function () { };
  //init auth
  Auth.prototype.init = function () {
    this.validateLogin();
    this.validateRegister();
    this.validateForgot();
    this.validateReset();
  }
  //validate login form
  Auth.prototype.validateLogin = function () {
    if ($('#login-form').length) {
      $('#login-form').validate({
        focusInvalid: false,
        rules: {
          'username': {
            required: true
          },
          'password': {
            required: true,
          },
          'validation-required': {
            required: true
          }
        },
        errorPlacement: function errorPlacement(error, element) {
          $(element).siblings(".validation-error").removeClass("d-none");
          return true
        },
        highlight: function (element) {
          var $el = $(element);
          var $parent = $el.parents('.form-group');
          $parent.addClass("invalid-field");
        },
        unhighlight: function (element) {
          var $el = $(element);
          var $parent = $el.parents('.form-group');
          $parent.removeClass("invalid-field");
          $(element).siblings(".validation-error").addClass("d-none");
        },
        submitHandler: function (form) {
          $(form).find("[type = 'submit']").addClass("disable-events");
          if($.API){
            var prom = $.API.postWithoutToken(null, $(form).serializeArray(), loginRoute);
            prom.then(function(data) {
              $(form)[0].reset();
              window.location.href = "/"
            }).catch(function(error) {
              if (error && error.responseJSON) {
                var resp = error.responseJSON;
                if (resp.errors) {
                  var errorMsg = resp.errors;
                  $(form).find("#errorMsg p").remove();
                  for (var i in errorMsg) {
                    var pelem = "<p>" + errorMsg[i] + "</p>";
                    $(form).find("#errorMsg").append(pelem);
                  }
                  $(form).find("#errorMsg").fadeIn(200);
                }
              }
            }).finally(function(){
              $(form).find("[type = 'submit']").removeClass("disable-events");
            })
          }
        }
      });
    }
  }
  //validate register form
  Auth.prototype.validateRegister = function () {
    if ($('#signup-form').length) {
      $('#signup-form').validate({
        focusInvalid: false,
        rules: {
          'username': {
            required: true
          },
          'email': {
            required: true
          },
          'password': {
            required: true,
            minlength: 6,
            maxlength: 32
          },
          'password_confirmation': {
            required: true,
            equalTo: "#password_primary"
          },
          'validation-required': {
            required: true
          }
        },
        errorPlacement: function errorPlacement(error, element) {
          if(error[0].innerText === 'Please enter a valid email address.'){
            $(element).siblings(".validation-error").text(error[0].innerText).removeClass("d-none");
          }
          else if ($(error[0]).text() === 'Please enter the same value again.') {
            $(element).siblings(".validation-error").removeClass("d-none").text("Password and confirm password should be same");
          }
          else if ($(error[0]).text() === 'Please enter at least 6 characters.' || $(error[0]).text() === 'Please enter no more than 32 characters.') {
            $(element).siblings(".validation-error").removeClass("d-none").text($(error[0]).text());
          }
          else {
            $(element).siblings(".validation-error").addClass("d-none");
          }
          return true
        },
        highlight: function (element) {
          var $el = $(element);
          var $parent = $el.parents('.form-group');
          $parent.addClass("invalid-field")
        },
        unhighlight: function (element) {
          var $el = $(element);
          var $parent = $el.parents('.form-group');
          $parent.removeClass("invalid-field");
          $(element).siblings(".validation-error").addClass("d-none");
        },
        submitHandler: function (form) {
          $(form).find("[type = 'submit']").addClass("disable-events");
          if($.API){
            var prom = $.API.postWithoutToken(null, $(form).serializeArray(), registerRoute);
            prom.then(function(data) {
              console.log("data ==>", data);
              $(form)[0].reset();
              window.location.href = "/"
            }).catch(function(error) {
              if (error && error.responseJSON) {
                var resp = error.responseJSON;
                if (resp.errors) {
                  var errorMsg = resp.errors;
                  $(form).find("#errorMsg p").remove();
                  for (var i in errorMsg) {
                    var pelem = "<p>" + errorMsg[i] + "</p>";
                    $(form).find("#errorMsg").append(pelem);
                  }
                  $(form).find("#errorMsg").fadeIn(200);
                }
              }
            }).finally(function(){
              $(form).find("[type = 'submit']").removeClass("disable-events");
            })
          }
        }
      });
    }
  }
  //validate forgot form
  Auth.prototype.validateForgot = function () {
    if ($('#forgot-form').length) {
      $('#forgot-form').validate({
        focusInvalid: false,
        rules: {
          'email': {
            required: true,
            email: true
          },
          'validation-required': {
            required: true
          }
        },
        errorPlacement: function errorPlacement(error, element) {
          $(element).siblings(".validation-error").removeClass("d-none");
          return true
        },
        highlight: function (element) {
          var $el = $(element);
          var $parent = $el.parents('.form-group');
          $parent.addClass("invalid-field")
        },
        unhighlight: function (element) {
          var $el = $(element);
          var $parent = $el.parents('.form-group');
          $parent.removeClass("invalid-field");
          $(element).siblings(".validation-error").addClass("d-none");
        },
        submitHandler: function (form) {
          $(form).find("[type = 'submit']").addClass("disable-events");
          var payload = convertSerializeObj($(form).serializeArray())
          if($.API){
            var prom = $.API.postWithoutToken('user/forgot-password', payload, null);
            prom.then(function(data) {
              console.log("data ==>", data);
              $(form)[0].reset();
              if (data.message === "User not found") {
                $(form).find("#successMsg").find("p").remove();
                $(form).find("#successMsg").removeClass("alert-success").addClass("alert-danger").append("<p>Email id not match with our records.</p>");
              }
              else if(data.code === 200) {
                $(form).find("#successMsg").find("p").remove();
                $(form).find("#successMsg").removeClass("alert-danger").addClass("alert-success").append("<p>Reset password mail has been send to your email address.</p>");
              }
              $(form).find("#successMsg").fadeIn(200);
            }).catch(function(error) {
              if (err && err.responseJSON) {
                var resp = err.responseJSON;
                if ((resp.code && resp.code === 400) && resp.error) {
                  $(form).find("#errorMsg").append("<p>Email id not match with our records. Please contact admin in case your are facing any issue.</p>");
                  $(form).find("#errorMsg").fadeIn(200);
                }
              }
            }).finally(function(){
              $(form).find("[type = 'submit']").removeClass("disable-events");
            })
          }
        }
      });
    }
  }
  //validate reset form
  Auth.prototype.validateReset = function () {
    if ($('#reset-form').length) {
      $('#reset-form').validate({
        focusInvalid: false,
        rules: {
          'password': {
            required: true,
            minlength: 6,
            maxlength: 32
          },
          'password_confirmation': {
            required: true,
            equalTo: "#password_reset"
          },
          'validation-required': {
            required: true
          }
        },
        errorPlacement: function errorPlacement(error, element) {
          if ($(error[0]).text() === 'Please enter the same value again.') {
            $(element).siblings(".validation-error").removeClass("d-none").text("Password and confirm password should be same");
          }
          $(element).siblings(".validation-error").removeClass("d-none");
          return true
        },
        highlight: function (element) {
          var $el = $(element);
          var $parent = $el.parents('.form-group');
          $parent.addClass("invalid-field")
        },
        unhighlight: function (element) {
          var $el = $(element);
          var $parent = $el.parents('.form-group');
          $parent.removeClass("invalid-field");
          $(element).siblings(".validation-error").addClass("d-none");
        },
        submitHandler: function (form) {
          $(form).find("[type = 'submit']").addClass("disable-events");
          var param = new URLSearchParams(window.location.search);
          var token = param.get('token');
          var email = param.get('email');
          if ((email && email.length) && (token && token.length)) {
            var payload = convertSerializeObj($(form).serializeArray());
            payload.token = token;
            payload.email = email;
            if($.API){
              var prom = $.API.postWithoutToken('user/reset-password', payload);
              prom.then(function(data) {
                $(form)[0].reset();
                $(form).find("#successMsg").append("<p>Password reset successfully. Please signin again.</p>");
                $(form).find("#successMsg").fadeIn(200);
                setTimeout(function () {
                  window.location.href = "index.html"
                }, 5000)
              }).catch(function(error) {
                if (error && error.responseJSON) {
                  var resp = error.responseJSON;
                  if ((resp.code && resp.code === 400) && resp.error) {
                    $(form).find(".error-msgs").append("<p>Link has been expired.</p>");
                    $(form).find(".error-msgs").fadeIn(200);
                  }
                }
              }).finally(function(){
                $(form).find("[type = 'submit']").removeClass("disable-events");
              })
            }
          }
        }
      });
    }
  }
  //init App
  $.Auth = new Auth, $.Auth.Constructor = Auth
}(window.jQuery),
//initializing App
function ($) {
  "use strict";
  $.Auth.init();
}(window.jQuery);

function convertSerializeObj(formData) {
  var payload = {}
  formData.forEach(function(item){
    payload[item.name] = item.value;
  })
  return payload
}
